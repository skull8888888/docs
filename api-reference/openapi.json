{
  "openapi": "3.0.3",
  "info": {
    "title": "laminar",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.lmnr.ai/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/endpoint/run": {
      "post": {
        "tags": [
          "api::endpoints"
        ],
        "operationId": "run_endpoint_graph",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Endpoint run result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "{Name of output node}": {"$ref": "#/components/schemas/Message"}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "InstructNodeMetaLog": {
        "type": "object",
        "properties": {
          "semanticCacheEnabled": {
            "type": "boolean"
          },
          "semanticCacheRetrieved": {
            "type": "boolean",
            "nullable": true
          },
          "inputTokenCount": {
            "type": "integer",
            "format": "int64"
          },
          "outputTokenCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalTokenCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": ["semanticCacheEnabled", "inputTokenCount", "outputTokenCount", "totalTokenCount"]
      },
      "ChatNodeMetaLog": {
        "type": "object",
        "properties": {
          "semanticCacheEnabled": {
            "type": "boolean"
          },
          "semanticCacheRetrieved": {
            "type": "boolean",
            "nullable": true
          },
          "inputMessageCount": {
            "type": "integer",
            "format": "int64"
          },
          "inputTokenCount": {
            "type": "integer",
            "format": "int64"
          },
          "outputTokenCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalTokenCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": ["semanticCacheEnabled", "inputMessageCount", "inputTokenCount", "outputTokenCount", "totalTokenCount"]
      },
      "AgentNodeMetaLog": {
        "type": "object",
        "properties": {
          "stepsThreadId": {
            "type": "string",
            "format": "uuid"
          },
          "mainThreadId": {
            "type": "string",
            "format": "uuid"
          },
          "steps": {
            "type": "object"
          }
        },
        "required": ["stepsThreadId", "mainThreadId", "steps"]
      },
      "MetaLog": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InstructNodeMetaLog"
          },
          {
            "$ref": "#/components/schemas/ChatNodeMetaLog"
          },
          {
            "$ref": "#/components/schemas/AgentNodeMetaLog"
          }
        ]
      },
      "ThreadChatMessage": {
        "type": "object",
        "properties": {
          "thread_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "role": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": ["role", "content"]
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": ["role", "content"]
      },
      "ConditionedValue": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["condition", "value"]
      },
      "NodeInput": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/schemas/ThreadChatMessage"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            }
          },
          {
            "$ref": "#/components/schemas/ConditionedValue"
          }
        ]
      },
      "GraphRequest": {
        "type": "object",
        "required": [
          "endpoint",
          "inputs"
        ],
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "Name of the endpoint to be called"
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NodeInput"
            }
          },
          "modelApiKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "description": "The key is the provider name such as 'openai' and the value is the api key"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "value",
          "inputs",
          "inputMessages",
          "startTime",
          "endTime",
          "nodeId",
          "nodeName",
          "nodeType"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/NodeInput"
          },
          "inputMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": "all input messages to this node; accumulates previous messages too"
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NodeInput"
            }
          },
          "metaLog": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetaLog"
              }
            ],
            "nullable": true
          },
          "nodeId": {
            "type": "string",
            "format": "uuid"
          },
          "nodeName": {
            "type": "string"
          },
          "nodeType": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        }
      }
    }
  }
}
